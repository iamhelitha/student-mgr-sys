const express = require('express');
const fs = require('fs');
const path = require('path');

const app = express();

// Parse URL-encoded bodies
app.use(express.urlencoded({ extended: true }));

// Serve static files from the "public" directory
app.use(express.static(path.join(__dirname, 'public')));

app.post('/search', (req, res) => {
    const searchType = req.body.searchType;
    const searchValue = req.body.searchValue;

    fs.readFile('student.json', (err, data) => {
        if (err) throw err;
        let studentDetails = JSON.parse(data);

        let status = { found: false };

        for (let student of studentDetails) {
            if (String(student[searchType]) === String(searchValue)) {
                status = { found: true, student: student };
                break;
            }
        }

        res.json(status);
    });
});

// app.get('/student', (req, res) => {
//     fs.readFile('student.json', 'utf8', (err, data) => {
//         if (err) {
//             console.error(err);
//             res.status(500).send('An error occurred while reading the file.');
//         } else {
//             const students = JSON.parse(data);
//             res.status(200).send(students);
//         }
//     });
// });



//add new students
// app.post('/student', (req, res) => {
//     const newStudent = req.body;

//     fs.readFile('student.json', 'utf8', (err, data) => {
//         if (err) {
//             console.error(err);
//             res.status(500).send('An error occurred while reading the file.');
//         } else {
//             const students = JSON.parse(data);
//             students.push(newStudent);

//             fs.writeFile('student.json', JSON.stringify(students, null, 2), (err) => {
//                 if (err) {
//                     console.error(err);
//                     res.status(500).send('An error occurred while writing to the file.');
//                 } else {
//                     res.status(200).send('Data saved successfully');
//                 }
//             });
//         }
//     });
// });

app.listen(3000, () => {
    console.log('Server is running on port 3000');
});